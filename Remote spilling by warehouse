/* Remote Spilling by Warehouse: */
 WITH queued_queries AS
(
SELECT
query_id
,START_TIME
,round(execution_time / 1000, 2) AS execution_time_sec
,round(bytes_scanned / power(1024,2), 2) AS megabytes_scanned
,megabytes_scanned/ NULLIF(execution_time_sec ,0) AS mb_exec_per_sec
,round(total_elapsed_time / 1000, 2) AS total_elapsed_time_sec
, database_name, query_text
,database_name, schema_name, role_name, warehouse_name, warehouse_size
,round(queued_overload_time / 1000, 2) AS queued_overload_time_sec
,round(bytes_spilled_to_remote_storage / power(1024,3),4) AS gb_spilled_to_remote_storage
,CASE WHEN gb_spilled_to_remote_storage > 10.0 THEN TRUE ELSE FALSE END AS SPILLED_MORE_THAN_10GB
,CASE WHEN gb_spilled_to_remote_storage > 5.0 THEN TRUE ELSE FALSE END AS SPILLED_MORE_THAN_5GB
,CASE WHEN gb_spilled_to_remote_storage > 1.0 THEN TRUE ELSE FALSE END AS SPILLED_MORE_THAN_1GB
,CASE WHEN gb_spilled_to_remote_storage > 0.5 THEN TRUE ELSE FALSE END AS SPILLED_MORE_THAN_500MB
,CASE WHEN gb_spilled_to_remote_storage > 0.1 THEN TRUE ELSE FALSE END AS SPILLED_MORE_THAN_100MB
,CASE WHEN gb_spilled_to_remote_storage > 0.0 THEN TRUE ELSE FALSE END AS SPILLED_MORE_THAN_0MB
,CASE WHEN SPILLED_MORE_THAN_10GB THEN '6: Greater than 10 GB'
WHEN SPILLED_MORE_THAN_5GB THEN '5: 5 GB to 10 GB'
WHEN SPILLED_MORE_THAN_1GB THEN '4: 1 GB to 5 GB'
WHEN SPILLED_MORE_THAN_500MB THEN '3: 0.5 GB to 1 GB' -- '500MB to 1GB'
WHEN SPILLED_MORE_THAN_100MB THEN '2: 0.1 GB to 0.5 GB' --'100MB to 500MB'
WHEN SPILLED_MORE_THAN_0MB THEN '1: < 0.1 GB' -- '< 100MB'
ELSE 'None' END AS REMOTE_SPILLING_BUCKET
FROM SNOWFLAKE.account_usage.query_history qh
WHERE start_time = :daterange
--AND total_elapsed_time_sec > 5.0 -- 5 seconds
AND execution_time_sec >= 1.0
),
grouped_result as (
SELECT WAREHOUSE_NAME,
REMOTE_SPILLING_BUCKET, COUNT(*) AS queries_run
,  AVG(gb_spilled_to_remote_storage) AS gb_spilled_to_remote_storage
FROM queued_queries
where REMOTE_SPILLING_BUCKET != 'None'
GROUP BY 1,2 )
select *
,  round(100 * ratio_to_report( queries_run) over ( partition by warehouse_name ), 2)  AS pct_of_tot
from grouped_result
 order by REMOTE_SPILLING_BUCKET, WAREHOUSE_NAME;
